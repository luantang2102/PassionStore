<!-- Render QuickViewModal View Component -->
@{
    Guid? productId = null;
    if (ViewData["ProductId"] != null && Guid.TryParse(ViewData["ProductId"].ToString(), out var parsedId))
    {
        productId = parsedId;
    }
}
@await Component.InvokeAsync("QuickViewModal", new { productId })

<!-- Render CartModal View Component -->
@await Component.InvokeAsync("CartModal")

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // Debugging: Log to confirm script is running
            console.log('Modal script loaded');

            // Get CSRF token from meta tag
            function getCsrfToken() {
                const meta = document.querySelector('meta[name="csrf-token"]');
                return meta ? meta.content : null;
            }

            // Fetch UserInfo from session
            async function getUserInfo() {
                try {
                    const response = await fetch('/api/Session/UserInfo');
                    if (!response.ok) return null;
                    const userInfo = await response.json();
                    return userInfo.userId ? { userId: userInfo.userId } : null;
                } catch (error) {
                    console.error('Error fetching UserInfo:', error);
                    return null;
                }
            }

            // Quick View: Quantity Selector
            window.updateQuantity = function(delta) {
                const input = document.getElementById('quickViewQuantity');
                let value = parseInt(input.value);
                value = Math.max(1, value + delta);
                input.value = value;
            };

            // Quick View: Add to Cart
            window.addToCartQuickView = async function(productId) {
                const quantity = parseInt(document.getElementById('quickViewQuantity').value);
                const size = document.getElementById('quickViewSize').value;
                const userInfo = await getUserInfo();
                const payload = {
                    productId,
                    quantity,
                    size,
                    userId: userInfo?.userId || null
                };

                try {
                    const response = await fetch('/api/Cart/Add', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': getCsrfToken()
                        },
                        body: JSON.stringify(payload)
                    });
                    if (response.ok) {
                        alert('Sản phẩm đã được thêm vào giỏ!');
                        const modal = bootstrap.Modal.getInstance(document.getElementById('modaltoggle'));
                        modal.hide();
                        // Open cart modal
                        const cartModal = new bootstrap.Modal(document.getElementById('modallong'));
                        cartModal.show();
                        // Refresh cart modal by reloading the page
                        window.location.reload();
                    } else {
                        const error = await response.json();
                        alert(`Thêm vào giỏ thất bại: ${error.message || 'Lỗi không xác định.'}`);
                    }
                } catch (error) {
                    console.error('Error adding to cart:', error);
                    alert('Đã xảy ra lỗi khi thêm vào giỏ.');
                }
            };

            // Quick View: Open Modal
            document.querySelectorAll('[data-bs-target="#modaltoggle"]').forEach(button => {
                button.addEventListener('click', (event) => {
                    event.stopPropagation();
                    const productId = button.dataset.productId;
                    if (productId) {
                        // Reload page with productId to render QuickViewModal
                        window.location.href = window.location.pathname + '?productId=' + encodeURIComponent(productId);
                    } else {
                        console.error('Product ID missing');
                        alert('Không thể mở chế độ xem nhanh.');
                    }
                });
            });

            // Cart: Update Quantity
            window.updateCartQuantity = async function(cartItemKey, quantity) {
                if (quantity < 1) return;
                const userInfo = await getUserInfo();
                try {
                    const response = await fetch('/api/Cart/Update', {
                        method: 'PUT',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': getCsrfToken()
                        },
                        body: JSON.stringify({ cartItemKey, quantity, userId: userInfo?.userId || null })
                    });
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        const error = await response.json();
                        alert(`Cập nhật số lượng thất bại: ${error.message || 'Lỗi không xác định.'}`);
                    }
                } catch (error) {
                    console.error('Error updating quantity:', error);
                    alert('Đã xảy ra lỗi khi cập nhật số lượng.');
                }
            };

            // Cart: Remove Item
            window.removeCartItem = async function(cartItemKey) {
                const userInfo = await getUserInfo();
                try {
                    const response = await fetch('/api/Cart/Remove', {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                            'X-CSRF-TOKEN': getCsrfToken()
                        },
                        body: JSON.stringify({ cartItemKey, userId: userInfo?.userId || null })
                    });
                    if (response.ok) {
                        window.location.reload();
                    } else {
                        const error = await response.json();
                        alert(`Xóa sản phẩm thất bại: ${error.message || 'Lỗi không xác định.'}`);
                    }
                } catch (error) {
                    console.error('Error removing item:', error);
                    alert('Đã xảy ra lỗi khi xóa sản phẩm.');
                }
            };
        });
    </script>
}